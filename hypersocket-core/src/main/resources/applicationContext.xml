<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2013 Hypersocket Limited. All rights reserved. This program 
	and the accompanying materials are made available under the terms of the 
	GNU Public License v3.0 which accompanies this distribution, and is available 
	at http://www.gnu.org/licenses/gpl.html -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:hz="http://www.hazelcast.com/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/cache
    	   http://www.springframework.org/schema/cache/spring-cache.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/tx 
     	   http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     	   http://www.hazelcast.com/schema/spring
     	   http://www.hazelcast.com/schema/spring/hazelcast-spring-3.6.xsd">

	<bean id="annotationService" class="com.hypersocket.annotation.AnnotationServiceImpl" />
    <bean id="contextAnnotationService" class="com.hypersocket.context.ContextAnnotationServiceImpl" />

	<aop:config>
		<aop:aspect ref="annotationService">
			<aop:pointcut id="profiledMethods"
				expression="@annotation(com.hypersocket.annotation.HypersocketExtension)" />
			<aop:around pointcut-ref="profiledMethods" method="process" />
		</aop:aspect>
		<aop:aspect ref="contextAnnotationService">
			<aop:pointcut id="systemContextAnnotation"
				expression="@annotation(com.hypersocket.context.SystemContextRequired)" />
			<aop:around pointcut-ref="systemContextAnnotation" method="process" />
		</aop:aspect>
	</aop:config>


	<context:component-scan base-package="com.hypersocket">
		<context:include-filter type="regex"
			expression="com.hypersocket.*ServiceImpl" />
		<context:include-filter type="regex"
			expression="com.hypersocket.*RepositoryImpl" />
		<context:include-filter type="assignable"
			expression="com.hypersocket.repository.AbstractEntity" />
		<context:exclude-filter type="regex"
			expression="com.hypersocket.server.*" />
		<context:exclude-filter type="regex"
			expression="com.hypersocket.annotation.*" />
	</context:component-scan>

	<import resource="database.xml" />

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="upgradeService" class="com.hypersocket.upgrade.UpgradeServiceImpl">
		<property name="scripts" value="classpath*:upgrade/*" />
	</bean>

	<!-- DEFAULT PROFILE -->
		<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
			<!-- reference to our 'autowiring job factory bean', defined above: -->
			<property name="jobFactory" ref="autowiringSpringBeanJobFactory" />
		
			<!-- I will not explain the next three properties, just use it as shown: -->
			<property name="autoStartup" value="true" />
			<property name="schedulerName" value="quartzScheduler" />
			<property name="applicationContextSchedulerContextKey" value="applicationContext" />
	
		</bean>
		
		<hz:hazelcast id="instance">
			<hz:config>
				<hz:network port="5701" port-auto-increment="true">
					<hz:join>
						<hz:multicast enabled="false" />
					</hz:join>
				</hz:network>
			</hz:config>
		</hz:hazelcast>
		
		<hz:hibernate-region-factory id="regionFactory" instance-ref="instance"/>
		
		<hz:cache-manager id="hazelcastJCacheCacheManager" instance-ref="instance" name="hazelcastJCacheCacheManager"/>
		

</beans>
